{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","GoodsList","goods","map","good","App","useState","Default","sortGood","setSortGood","reverse","setReverse","visibleGoods","preparedGoods","length","sort","good1","good2","Alphabet","localeCompare","Length","getPrepareGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAUL,IAAME,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SAoCvB,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAmBP,EAASQ,SAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BH,oBAAkB,GAAhD,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EAhCR,SACEV,EACAM,EACAE,GAEA,IAAMG,EAAsB,YAAOX,GAqBnC,OAnB6B,IAAzBW,EAAcC,QAChBD,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKT,EAASmB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAKXJ,GACFG,EAAcH,UAGTG,EAMcQ,CAAgBrB,EAAiBQ,EAAUE,GAOhE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAYV,EAASmB,WACpCM,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAaT,EAASmB,WAJtC,iCASA,wBACEK,QAAS,kBAAMd,EAAYV,EAASqB,SACpCI,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAaT,EAASqB,SAJtC,4BASA,wBACEG,QAAS,kBAAMZ,GAAYD,IAC3Bc,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAaf,IAJjB,sBASEF,GAAYE,IACZ,wBACEa,QArCU,WAClBd,EAAYV,EAASQ,SACrBI,GAAW,IAoCHa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWpB,MAAOU,QCtHxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a62fb601.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Goods = string;\ntype Reverse = boolean;\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\ntype Props = {\n  goods: Goods[];\n};\n\nconst GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nfunction getPrepareGoods(\n  goods: Goods[],\n  sortGood: SortType | undefined,\n  reverse: Reverse,\n): Goods[] {\n  const preparedGoods: Goods[] = [...goods];\n\n  if (preparedGoods.length !== 0) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortGood) {\n        case SortType.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortGood, setSortGood] = useState<SortType>(SortType.Default);\n  const [reverse, setReverse] = useState<Reverse>(false);\n  const visibleGoods = getPrepareGoods(goodsFromServer, sortGood, reverse);\n\n  const handleReset = (): void => {\n    setSortGood(SortType.Default);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortGood(SortType.Alphabet)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortGood !== SortType.Alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          onClick={() => setSortGood(SortType.Length)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortGood !== SortType.Length,\n          })}\n        >\n          Sort by length\n        </button>\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !reverse,\n          })}\n        >\n          Reverse\n        </button>\n        {(sortGood || reverse) && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}